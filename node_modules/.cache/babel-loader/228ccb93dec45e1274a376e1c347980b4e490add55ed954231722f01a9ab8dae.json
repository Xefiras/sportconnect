{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onova\\\\Downloads\\\\fullstack\\\\frontend\\\\src\\\\sportconnect\\\\EditDireccion.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* global google */\nimport axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Wrapper } from \"@googlemaps/react-wrapper\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyCiSwQ835LzONcwinoIhq1zE-7keqrGKSs\";\nconst URI = 'http://localhost:8000/oneDireccion/'; //uri para obtener informacion de la direccion a editar\nconst updURI = 'http://localhost:8000/updateDireccion/'; //uri para actualizar la informacion de la direccion\nconst URICDE = 'http://localhost:8000/allDirecciones/'; //uri para comprobar si la direccion ya existe\n\n/* Inicio Funcionamiento de Maps */\n// Componente para manejar el mapa\nconst Map = ({\n  center,\n  zoom,\n  onMapClick,\n  marker\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (!map && mapRef.current) {\n      // Crear un nuevo mapa\n      const newMap = new google.maps.Map(mapRef.current, {\n        center,\n        zoom\n      });\n\n      // Agregar el manejador de clic en el mapa\n      newMap.addListener(\"click\", event => {\n        if (onMapClick) {\n          onMapClick(event.latLng);\n        }\n      });\n      setMap(newMap);\n    }\n  }, [mapRef, map, center, zoom, onMapClick]);\n  useEffect(() => {\n    if (map && marker) {\n      // Eliminar marcadores existentes\n      map.markers && map.markers.forEach(m => m.setMap(null));\n\n      // Crear nuevo marcador\n      const newMarker = new google.maps.Marker({\n        position: marker,\n        map\n      });\n      map.markers = [newMarker];\n    }\n  }, [map, marker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n/* Fin Funcionamiento de Maps */\n_s(Map, \"hr4EvM1T0HM03BexHOZNVoZbIHw=\");\n_c = Map;\nconst CompEditDireccion = () => {\n  _s2();\n  const navigate = useNavigate();\n  const {\n    ID_Direccion\n  } = useParams();\n  const [Calle, setCalle] = useState('');\n  const [Numero, setNumero] = useState('');\n  const [Alcaldia, setAlcaldia] = useState('Álvaro Obregón');\n  const [Codigo_Postal, setCodigoPostal] = useState('');\n  const [Coordenadas, setCoordenadas] = useState('');\n  const [Referencias, setReferencias] = useState('');\n  const [Entre_Calle_1, setEntreCalle1] = useState('');\n  const [Entre_Calle_2, setEntreCalle2] = useState('');\n  //Para el mapa\n  const [center, setCenter] = useState(Coordenadas);\n  const [zoom, setZoom] = useState(12);\n  const [marker, setMarker] = useState(null);\n  const searchInputRef = useRef(null);\n  const handleMapClick = latLng => {\n    const newMarker = {\n      lat: latLng.lat(),\n      lng: latLng.lng()\n    };\n    setMarker(newMarker);\n    setCoordenadas(`${newMarker.lat}, ${newMarker.lng}`);\n  };\n  const alcaldiasCDMX = ['Álvaro Obregón', 'Azcapotzalco', 'Benito Juárez', 'Coyoacán', 'Cuajimalpa de Morelos', 'Cuauhtémoc', 'Gustavo A. Madero', 'Iztacalco', 'Iztapalapa', 'Magdalena Contreras', 'Miguel Hidalgo', 'Milpa Alta', 'Tláhuac', 'Tlalpan', 'Venustiano Carranza', 'Xochimilco'];\n  const showErrorAlert = message => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: message,\n      confirmButtonText: 'OK'\n    });\n  };\n  useEffect(() => {\n    // Configurar autocompletar en el campo de búsqueda\n    if (searchInputRef.current) {\n      const autocomplete = new google.maps.places.Autocomplete(searchInputRef.current);\n\n      // Limitar los tipos de búsqueda a establecimientos (lugares)\n      autocomplete.setTypes([\"establishment\"]);\n\n      // Agregar filtro de palabras clave para solo buscar deportivos\n      autocomplete.setFields([\"name\", \"geometry\", \"types\"]);\n\n      // Define los límites de la Ciudad de México\n      const mexicoCityBounds = new google.maps.LatLngBounds(new google.maps.LatLng(19.1500, -99.3250),\n      // Suroeste de la Ciudad de México\n      new google.maps.LatLng(19.6300, -98.9900) // Noreste de la Ciudad de México\n      );\n\n      // Establece los límites geográficos para restringir la búsqueda a la Ciudad de México\n      autocomplete.setBounds(mexicoCityBounds);\n\n      // Manejador cuando se selecciona un lugar\n      autocomplete.addListener(\"place_changed\", () => {\n        const place = autocomplete.getPlace();\n        if (place && place.geometry) {\n          const location = place.geometry.location;\n          const newCenter = {\n            lat: location.lat(),\n            lng: location.lng()\n          };\n\n          // Centrar el mapa en la ubicación seleccionada y agregar un marcador\n          setCenter(newCenter);\n          setMarker(newCenter);\n          setCoordenadas(`${newCenter.lat}, ${newCenter.lng}`);\n        }\n      });\n    }\n  }, [searchInputRef]);\n\n  //Agregamos comprobación de direccion existente\n  const checkDireccionExistente = async () => {\n    try {\n      const response = await axios.get(URICDE);\n      const direcciones = response.data;\n\n      // Verifica si alguna dirección existente coincide con los datos de la dirección que estás editando\n      const direccionRepetida = direcciones.find(direccion => direccion.Calle === Calle && direccion.Numero === Numero && direccion.Alcaldia === Alcaldia && direccion.Codigo_Postal === Codigo_Postal && direccion.ID_Direccion !== ID_Direccion);\n      //Parseamos el id de la direccion a entero para poder hacer la comparación (muy importante)\n      console.log(\"ID de la direccion repetida, ID direccion actual\", direccionRepetida.ID_Direccion, parseInt(ID_Direccion));\n      //Hay que parsear para que los valores coincidan\n      if (parseInt(direccionRepetida.ID_Direccion) === parseInt(ID_Direccion)) {\n        return false;\n      } else {\n        // Si encuentra una dirección repetida, devuelve true\n        // de lo contrario, devuelve false\n        return direccionRepetida !== undefined;\n      }\n    } catch (error) {\n      console.error(\"Error al verificar la existencia de la dirección:\", error);\n      return false; // En caso de error, asumimos que la dirección no existe\n    }\n  };\n  const update = async e => {\n    e.preventDefault();\n\n    //Comprobamos si la direccion existe\n    const direccionExistente = await checkDireccionExistente();\n    if (direccionExistente) {\n      showErrorAlert(\"Ya existe un deportivo con esa dirección\");\n      return;\n    }\n\n    // Validar campos requeridos\n    if (!Calle || !Numero || !Codigo_Postal || !Coordenadas || !Referencias || !Entre_Calle_1 || !Entre_Calle_2) {\n      showErrorAlert(\"Todos los campos son requeridos\");\n      return;\n    }\n\n    // Validar que el código postal sea numérico\n    if (isNaN(Codigo_Postal)) {\n      showErrorAlert(\"El código postal debe ser numérico\");\n      return;\n    }\n\n    // Validar coordenadas\n    if (!isValidCoordinates(Coordenadas)) {\n      showErrorAlert(\"Las coordenadas no tienen el formato correcto\");\n      return;\n    }\n\n    // Validar Numero\n    if (!isValidNumero(Numero)) {\n      showErrorAlert(\"El número debe ser un valor numérico o S/N\");\n      return;\n    }\n\n    // Enviar la solicitud de actualización\n    await axios.put(updURI + ID_Direccion, {\n      Calle: Calle,\n      Numero: Numero,\n      Alcaldia: Alcaldia,\n      Codigo_Postal: Codigo_Postal,\n      Coordenadas: Coordenadas,\n      Referencias: Referencias,\n      Entre_Calle_1: Entre_Calle_1,\n      Entre_Calle_2: Entre_Calle_2\n    });\n\n    // Regresar al principio\n    navigate('/');\n  };\n  const getDireccionById = async () => {\n    const res = await axios.get(URI + ID_Direccion);\n    try {\n      setCalle(res.data.Calle || '');\n      setNumero(res.data.Numero || '');\n      setAlcaldia(res.data.Alcaldia || 'Álvaro Obregón');\n      setCodigoPostal(res.data.Codigo_Postal || '');\n      //setCoordenadas(res.data.Coordenadas || '');\n      setReferencias(res.data.Referencias || '');\n      setEntreCalle1(res.data.Entre_Calle_1 || '');\n      setEntreCalle2(res.data.Entre_Calle_2 || '');\n      const [lat, lng] = res.data.Coordenadas.split(', ').map(parseFloat);\n      const coordenadas = {\n        lat,\n        lng\n      };\n      setCoordenadas(res.data.Coordenadas || '');\n      // Establece el estado del marcador con las coordenadas recuperadas\n      setMarker(coordenadas);\n\n      // Centrar el mapa en la posición del marcador\n      setCenter(coordenadas);\n    } catch (error) {\n      console.log(\"Error al obtener datos\", error);\n    }\n  };\n  useEffect(() => {\n    getDireccionById();\n  }, []);\n  const handleAlcaldiaChange = e => {\n    const selectedOption = e.target.options[e.target.selectedIndex];\n    const selectedAlcaldia = selectedOption.innerText;\n    setAlcaldia(selectedAlcaldia);\n  };\n  const isValidCoordinates = coordinates => {\n    const regex = /^-?\\d+\\.\\d+,\\s*-?\\d+\\.\\d+$/;\n    return regex.test(coordinates);\n  };\n  const isValidNumero = Numero => {\n    console.log(Numero);\n    const regex = /^\\d+$/;\n    if (Numero === \"S/N\" || Numero === \"s/n\") {\n      return true;\n    } else {\n      return regex.test(Numero);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editar direcci\\xF3n existente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: update,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Calle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Calle,\n          onChange: e => setCalle(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"N\\xFAmero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Numero,\n          onChange: e => setNumero(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Alcald\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: Alcaldia,\n          onChange: handleAlcaldiaChange,\n          className: \"form-control\",\n          required: true,\n          children: alcaldiasCDMX.map((alcaldia, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: alcaldia,\n            children: alcaldia\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"C\\xF3digo Postal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Codigo_Postal,\n          onChange: e => setCodigoPostal(e.target.value),\n          className: \"form-control\",\n          maxLength: 5,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Coordenadas (Latitud, Longitud)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Coordenadas,\n          onChange: e => setCoordenadas(e.target.value),\n          className: \"form-control\",\n          required: true,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0.1px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: searchInputRef,\n              type: \"text\",\n              placeholder: \"Buscar deportivo en la Ciudad de M\\xE9xico...\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n            apiKey: API_KEY,\n            render: status => /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 71\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Map, {\n              center: center,\n              zoom: zoom,\n              onMapClick: handleMapClick,\n              marker: marker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Referencias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: Referencias,\n            onChange: e => setReferencias(e.target.value),\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Entre Calle 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Entre_Calle_1,\n          onChange: e => setEntreCalle1(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Entre Calle 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Entre_Calle_2,\n          onChange: e => setEntreCalle2(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Actualizar direcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 9\n  }, this);\n};\n_s2(CompEditDireccion, \"1hGZ1IygU8PBrftXxKOIbig9yBs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c2 = CompEditDireccion;\nexport default CompEditDireccion;\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"CompEditDireccion\");","map":{"version":3,"names":["axios","React","useState","useEffect","useRef","useNavigate","useParams","Wrapper","Swal","jsxDEV","_jsxDEV","API_KEY","URI","updURI","URICDE","Map","center","zoom","onMapClick","marker","_s","mapRef","map","setMap","current","newMap","google","maps","addListener","event","latLng","markers","forEach","m","newMarker","Marker","position","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","CompEditDireccion","_s2","navigate","ID_Direccion","Calle","setCalle","Numero","setNumero","Alcaldia","setAlcaldia","Codigo_Postal","setCodigoPostal","Coordenadas","setCoordenadas","Referencias","setReferencias","Entre_Calle_1","setEntreCalle1","Entre_Calle_2","setEntreCalle2","setCenter","setZoom","setMarker","searchInputRef","handleMapClick","lat","lng","alcaldiasCDMX","showErrorAlert","message","fire","icon","title","text","confirmButtonText","autocomplete","places","Autocomplete","setTypes","setFields","mexicoCityBounds","LatLngBounds","LatLng","setBounds","place","getPlace","geometry","location","newCenter","checkDireccionExistente","response","get","direcciones","data","direccionRepetida","find","direccion","console","log","parseInt","undefined","error","update","e","preventDefault","direccionExistente","isNaN","isValidCoordinates","isValidNumero","put","getDireccionById","res","split","parseFloat","coordenadas","handleAlcaldiaChange","selectedOption","target","options","selectedIndex","selectedAlcaldia","innerText","coordinates","regex","test","className","children","onSubmit","type","value","onChange","required","alcaldia","index","maxLength","disabled","padding","placeholder","apiKey","render","status","_c2","$RefreshReg$"],"sources":["C:/Users/onova/Downloads/fullstack/frontend/src/sportconnect/EditDireccion.js"],"sourcesContent":["/* global google */\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { Wrapper } from \"@googlemaps/react-wrapper\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst API_KEY = \"AIzaSyCiSwQ835LzONcwinoIhq1zE-7keqrGKSs\"; \r\n\r\nconst URI = 'http://localhost:8000/oneDireccion/'; //uri para obtener informacion de la direccion a editar\r\nconst updURI = 'http://localhost:8000/updateDireccion/'; //uri para actualizar la informacion de la direccion\r\nconst URICDE = 'http://localhost:8000/allDirecciones/' //uri para comprobar si la direccion ya existe\r\n\r\n\r\n/* Inicio Funcionamiento de Maps */\r\n// Componente para manejar el mapa\r\nconst Map = ({ center, zoom, onMapClick, marker }) => {\r\n    const mapRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      if (!map && mapRef.current) {\r\n        // Crear un nuevo mapa\r\n        const newMap = new google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n        });\r\n  \r\n        // Agregar el manejador de clic en el mapa\r\n        newMap.addListener(\"click\", (event) => {\r\n          if (onMapClick) {\r\n            onMapClick(event.latLng);\r\n          }\r\n        });\r\n  \r\n        setMap(newMap);\r\n      }\r\n    }, [mapRef, map, center, zoom, onMapClick]);\r\n  \r\n    useEffect(() => {\r\n      if (map && marker) {\r\n        // Eliminar marcadores existentes\r\n        map.markers && map.markers.forEach((m) => m.setMap(null));\r\n        \r\n        // Crear nuevo marcador\r\n        const newMarker = new google.maps.Marker({\r\n          position: marker,\r\n          map,\r\n        });\r\n        \r\n        map.markers = [newMarker];\r\n      }\r\n    }, [map, marker]);\r\n  \r\n    return <div ref={mapRef} style={{ width: \"100%\", height: \"100%\" }} />;\r\n  };\r\n/* Fin Funcionamiento de Maps */\r\n\r\nconst CompEditDireccion = () => {\r\n    const navigate = useNavigate();\r\n    const { ID_Direccion } = useParams(); \r\n\r\n    const [Calle, setCalle] = useState('');\r\n    const [Numero, setNumero] = useState('');\r\n    const [Alcaldia, setAlcaldia] = useState('Álvaro Obregón');\r\n    const [Codigo_Postal, setCodigoPostal] = useState('');\r\n    const [Coordenadas, setCoordenadas] = useState('');\r\n    const [Referencias, setReferencias] = useState('');\r\n    const [Entre_Calle_1, setEntreCalle1] = useState('');\r\n    const [Entre_Calle_2, setEntreCalle2] = useState('');\r\n    //Para el mapa\r\n    const [center, setCenter] = useState(Coordenadas);\r\n    const [zoom, setZoom] = useState(12);\r\n    const [marker, setMarker] = useState(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const handleMapClick = (latLng) => {\r\n        const newMarker = { lat: latLng.lat(), lng: latLng.lng() };\r\n        setMarker(newMarker);\r\n        setCoordenadas(`${newMarker.lat}, ${newMarker.lng}`);\r\n      };\r\n\r\n    const alcaldiasCDMX = [\r\n        'Álvaro Obregón',\r\n        'Azcapotzalco',\r\n        'Benito Juárez',\r\n        'Coyoacán',\r\n        'Cuajimalpa de Morelos',\r\n        'Cuauhtémoc',\r\n        'Gustavo A. Madero',\r\n        'Iztacalco',\r\n        'Iztapalapa',\r\n        'Magdalena Contreras',\r\n        'Miguel Hidalgo',\r\n        'Milpa Alta',\r\n        'Tláhuac',\r\n        'Tlalpan',\r\n        'Venustiano Carranza',\r\n        'Xochimilco'\r\n    ];\r\n\r\n    const showErrorAlert = (message) => {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: message,\r\n            confirmButtonText: 'OK'\r\n        });\r\n    };      \r\n\r\n    useEffect(() => {\r\n        // Configurar autocompletar en el campo de búsqueda\r\n        if (searchInputRef.current) {\r\n          const autocomplete = new google.maps.places.Autocomplete(searchInputRef.current);\r\n    \r\n          // Limitar los tipos de búsqueda a establecimientos (lugares)\r\n          autocomplete.setTypes([\"establishment\"]);\r\n    \r\n          // Agregar filtro de palabras clave para solo buscar deportivos\r\n          autocomplete.setFields([\"name\", \"geometry\", \"types\"]);\r\n          \r\n    \r\n          // Define los límites de la Ciudad de México\r\n          const mexicoCityBounds = new google.maps.LatLngBounds(\r\n            new google.maps.LatLng(19.1500, -99.3250), // Suroeste de la Ciudad de México\r\n            new google.maps.LatLng(19.6300, -98.9900) // Noreste de la Ciudad de México\r\n          );\r\n    \r\n          // Establece los límites geográficos para restringir la búsqueda a la Ciudad de México\r\n          autocomplete.setBounds(mexicoCityBounds);\r\n    \r\n          // Manejador cuando se selecciona un lugar\r\n          autocomplete.addListener(\"place_changed\", () => {\r\n            const place = autocomplete.getPlace();\r\n            \r\n            if (place && place.geometry) {\r\n              const location = place.geometry.location;\r\n              const newCenter = {\r\n                lat: location.lat(),\r\n                lng: location.lng(),\r\n              };\r\n    \r\n              // Centrar el mapa en la ubicación seleccionada y agregar un marcador\r\n              setCenter(newCenter);\r\n              setMarker(newCenter);\r\n              setCoordenadas(`${newCenter.lat}, ${newCenter.lng}`);\r\n            }\r\n          });\r\n        }\r\n      }, [searchInputRef]);\r\n\r\n    //Agregamos comprobación de direccion existente\r\n    const checkDireccionExistente = async () => {\r\n        try {\r\n            const response = await axios.get(URICDE);\r\n            const direcciones = response.data;\r\n    \r\n            // Verifica si alguna dirección existente coincide con los datos de la dirección que estás editando\r\n            const direccionRepetida = direcciones.find(direccion => (\r\n                direccion.Calle === Calle &&\r\n                direccion.Numero === Numero &&\r\n                direccion.Alcaldia === Alcaldia &&\r\n                direccion.Codigo_Postal === Codigo_Postal &&\r\n                direccion.ID_Direccion !== ID_Direccion\r\n            ));\r\n            //Parseamos el id de la direccion a entero para poder hacer la comparación (muy importante)\r\n            console.log(\"ID de la direccion repetida, ID direccion actual\",direccionRepetida.ID_Direccion, parseInt(ID_Direccion))\r\n            //Hay que parsear para que los valores coincidan\r\n            if(parseInt(direccionRepetida.ID_Direccion) === parseInt(ID_Direccion)){\r\n                return false\r\n            }\r\n            \r\n            else{// Si encuentra una dirección repetida, devuelve true\r\n                // de lo contrario, devuelve false\r\n                return direccionRepetida !== undefined;\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error al verificar la existencia de la dirección:\", error);\r\n            return false; // En caso de error, asumimos que la dirección no existe\r\n        }\r\n    };\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        //Comprobamos si la direccion existe\r\n        const direccionExistente = await checkDireccionExistente();\r\n        \r\n        if (direccionExistente) {\r\n            showErrorAlert(\"Ya existe un deportivo con esa dirección\");\r\n            return;\r\n        }\r\n        \r\n\r\n        // Validar campos requeridos\r\n        if (!Calle || !Numero || !Codigo_Postal || !Coordenadas || !Referencias || !Entre_Calle_1 || !Entre_Calle_2) {\r\n            showErrorAlert(\"Todos los campos son requeridos\");\r\n            return;\r\n        }\r\n\r\n        // Validar que el código postal sea numérico\r\n        if (isNaN(Codigo_Postal)) {\r\n            showErrorAlert(\"El código postal debe ser numérico\");\r\n            return;\r\n        }\r\n\r\n        // Validar coordenadas\r\n        if (!isValidCoordinates(Coordenadas)) {\r\n            showErrorAlert(\"Las coordenadas no tienen el formato correcto\");\r\n            return;\r\n        }\r\n\r\n        // Validar Numero\r\n        if (!isValidNumero(Numero)) {\r\n            showErrorAlert(\"El número debe ser un valor numérico o S/N\");\r\n            return;\r\n        }\r\n\r\n        // Enviar la solicitud de actualización\r\n        await axios.put(updURI + ID_Direccion, {\r\n            Calle: Calle, \r\n            Numero: Numero, \r\n            Alcaldia: Alcaldia,\r\n            Codigo_Postal: Codigo_Postal, \r\n            Coordenadas: Coordenadas, \r\n            Referencias: Referencias, \r\n            Entre_Calle_1: Entre_Calle_1,\r\n            Entre_Calle_2: Entre_Calle_2       \r\n        });\r\n\r\n        // Regresar al principio\r\n        navigate('/');\r\n    }\r\n\r\n    const getDireccionById = async () => {\r\n        const res = await axios.get(URI + ID_Direccion);\r\n        try {\r\n            setCalle(res.data.Calle || '');\r\n            setNumero(res.data.Numero || '');\r\n            setAlcaldia(res.data.Alcaldia || 'Álvaro Obregón');\r\n            setCodigoPostal(res.data.Codigo_Postal || '');\r\n            //setCoordenadas(res.data.Coordenadas || '');\r\n            setReferencias(res.data.Referencias || '');\r\n            setEntreCalle1(res.data.Entre_Calle_1 || '');\r\n            setEntreCalle2(res.data.Entre_Calle_2 || '');\r\n        \r\n            const [lat, lng] = res.data.Coordenadas.split(', ').map(parseFloat);\r\n            const coordenadas = { lat, lng };\r\n\r\n            setCoordenadas(res.data.Coordenadas || '');\r\n            // Establece el estado del marcador con las coordenadas recuperadas\r\n            setMarker(coordenadas);\r\n        \r\n            // Centrar el mapa en la posición del marcador\r\n            setCenter(coordenadas);\r\n        } catch (error) {\r\n            console.log(\"Error al obtener datos\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => { \r\n        getDireccionById();\r\n    }, []);\r\n\r\n    const handleAlcaldiaChange = (e) => {\r\n        const selectedOption = e.target.options[e.target.selectedIndex];\r\n        const selectedAlcaldia = selectedOption.innerText;\r\n        setAlcaldia(selectedAlcaldia);\r\n    };\r\n\r\n    const isValidCoordinates = (coordinates) => {\r\n        const regex = /^-?\\d+\\.\\d+,\\s*-?\\d+\\.\\d+$/;\r\n        return regex.test(coordinates);\r\n    };\r\n    \r\n    const isValidNumero = (Numero) => {\r\n        console.log(Numero)\r\n        const regex = /^\\d+$/;        \r\n        if(Numero===\"S/N\" || Numero===\"s/n\"){\r\n            return true\r\n        }\r\n        else{\r\n            return regex.test(Numero);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"formulario\">\r\n            <h1>Editar dirección existente</h1>\r\n            <form onSubmit={update}>\r\n                <div className=\"form-group\">\r\n                    <label>Calle</label>\r\n                    <input type=\"text\" value={Calle} onChange={(e) => setCalle(e.target.value)} className=\"form-control\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Número</label>\r\n                    <input type=\"text\" value={Numero} onChange={(e) => setNumero(e.target.value)} className=\"form-control\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Alcaldía</label>\r\n                    <select value={Alcaldia} onChange={handleAlcaldiaChange} className=\"form-control\" required>\r\n                        {alcaldiasCDMX.map((alcaldia, index) => (\r\n                            <option key={index} value={alcaldia}>{alcaldia}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Código Postal</label>\r\n                    <input type=\"text\" value={Codigo_Postal} onChange={(e) => setCodigoPostal(e.target.value)} className=\"form-control\" maxLength={5} required />\r\n                </div>\r\n                <div>\r\n                    <label><strong>Coordenadas (Latitud, Longitud)</strong></label> \r\n                    <input type=\"text\" value={Coordenadas} onChange={(e) => setCoordenadas(e.target.value)} className=\"form-control\" required disabled/>\r\n                </div>                \r\n                <div className=\"form-group\">\r\n                    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n                        <div style={{ padding: \"0.1px\" }}>\r\n                            {/* Barra de búsqueda */}\r\n                            <input\r\n                            ref={searchInputRef}\r\n                            type=\"text\"\r\n                            placeholder=\"Buscar deportivo en la Ciudad de México...\"\r\n                            className=\"form-control\"\r\n                            />           \r\n                        </div>\r\n\r\n                        <Wrapper apiKey={API_KEY} render={(status) => <h1>{status}</h1>}>\r\n                            <Map center={center} zoom={zoom} onMapClick={handleMapClick} marker={marker} />\r\n                        </Wrapper>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div style={{ padding: \"20px\" }}>\r\n                        <label>Referencias</label>\r\n                        <input type=\"text\" value={Referencias} onChange={(e) => setReferencias(e.target.value)} className=\"form-control\" required />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Entre Calle 1</label>\r\n                    <input type=\"text\" value={Entre_Calle_1} onChange={(e) => setEntreCalle1(e.target.value)} className=\"form-control\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Entre Calle 2</label>\r\n                    <input type=\"text\" value={Entre_Calle_2} onChange={(e) => setEntreCalle2(e.target.value)} className=\"form-control\" required />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Actualizar dirección</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompEditDireccion;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}