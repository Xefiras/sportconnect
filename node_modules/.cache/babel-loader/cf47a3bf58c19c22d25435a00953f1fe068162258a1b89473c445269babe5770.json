{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beleche\\\\OneDrive - Instituto Politecnico Nacional\\\\Documents\\\\IPN\\\\ESCOM\\\\Backend Development\\\\Proyecto\\\\Avance 3\\\\frontend\\\\src\\\\sportconnect\\\\ShowMap.js\",\n  _s = $RefreshSig$();\n/* global google */\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleMap = ({\n  coordinates\n}) => {\n  _s();\n  const mapRef = useRef(null); // Referencia al contenedor del mapa\n\n  useEffect(() => {\n    const initializeMap = () => {\n      if (mapRef.current && window.google) {\n        // Crea un nuevo mapa\n        const map = new google.maps.Map(mapRef.current, {\n          center: {\n            lat: coordinates.lat,\n            lng: coordinates.lng\n          },\n          zoom: 17\n        });\n\n        // Crea un marcador en las coordenadas proporcionadas\n        new google.maps.Marker({\n          position: {\n            lat: coordinates.lat,\n            lng: coordinates.lng\n          },\n          map: map\n        });\n      }\n    };\n    if (window.google) {\n      // Si Google Maps API ya está cargada\n      initializeMap();\n    } else {\n      // Intenta cargar la API de Google Maps si aún no está disponible\n      const interval = setInterval(() => {\n        if (window.google) {\n          initializeMap();\n          clearInterval(interval); // Limpia el intervalo una vez cargado\n        }\n      }, 100);\n    }\n  }, [coordinates]); // Se ejecuta cuando cambian las coordenadas\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '300px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n_s(GoogleMap, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = GoogleMap;\nexport default GoogleMap;\nvar _c;\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","GoogleMap","coordinates","_s","mapRef","initializeMap","current","window","google","map","maps","Map","center","lat","lng","zoom","Marker","position","interval","setInterval","clearInterval","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Beleche/OneDrive - Instituto Politecnico Nacional/Documents/IPN/ESCOM/Backend Development/Proyecto/Avance 3/frontend/src/sportconnect/ShowMap.js"],"sourcesContent":["/* global google */\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst GoogleMap = ({ coordinates }) => {\r\n    const mapRef = useRef(null); // Referencia al contenedor del mapa\r\n\r\n    useEffect(() => {\r\n        const initializeMap = () => {\r\n            if (mapRef.current && window.google) {\r\n                // Crea un nuevo mapa\r\n                const map = new google.maps.Map(mapRef.current, {\r\n                    center: { lat: coordinates.lat, lng: coordinates.lng },\r\n                    zoom: 17,\r\n                });\r\n\r\n                // Crea un marcador en las coordenadas proporcionadas\r\n                new google.maps.Marker({\r\n                    position: { lat: coordinates.lat, lng: coordinates.lng },\r\n                    map: map,\r\n                });\r\n            }\r\n        };\r\n\r\n        if (window.google) {\r\n            // Si Google Maps API ya está cargada\r\n            initializeMap();\r\n        } else {\r\n            // Intenta cargar la API de Google Maps si aún no está disponible\r\n            const interval = setInterval(() => {\r\n                if (window.google) {\r\n                    initializeMap();\r\n                    clearInterval(interval); // Limpia el intervalo una vez cargado\r\n                }\r\n            }, 100);\r\n        }\r\n    }, [coordinates]); // Se ejecuta cuando cambian las coordenadas\r\n\r\n    return <div ref={mapRef} style={{ height: '300px', width: '100%' }} />;\r\n};\r\n\r\nexport default GoogleMap;\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7BD,SAAS,CAAC,MAAM;IACZ,MAAMQ,aAAa,GAAGA,CAAA,KAAM;MACxB,IAAID,MAAM,CAACE,OAAO,IAAIC,MAAM,CAACC,MAAM,EAAE;QACjC;QACA,MAAMC,GAAG,GAAG,IAAID,MAAM,CAACE,IAAI,CAACC,GAAG,CAACP,MAAM,CAACE,OAAO,EAAE;UAC5CM,MAAM,EAAE;YAAEC,GAAG,EAAEX,WAAW,CAACW,GAAG;YAAEC,GAAG,EAAEZ,WAAW,CAACY;UAAI,CAAC;UACtDC,IAAI,EAAE;QACV,CAAC,CAAC;;QAEF;QACA,IAAIP,MAAM,CAACE,IAAI,CAACM,MAAM,CAAC;UACnBC,QAAQ,EAAE;YAAEJ,GAAG,EAAEX,WAAW,CAACW,GAAG;YAAEC,GAAG,EAAEZ,WAAW,CAACY;UAAI,CAAC;UACxDL,GAAG,EAAEA;QACT,CAAC,CAAC;MACN;IACJ,CAAC;IAED,IAAIF,MAAM,CAACC,MAAM,EAAE;MACf;MACAH,aAAa,CAAC,CAAC;IACnB,CAAC,MAAM;MACH;MACA,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/B,IAAIZ,MAAM,CAACC,MAAM,EAAE;UACfH,aAAa,CAAC,CAAC;UACfe,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;QAC7B;MACJ,CAAC,EAAE,GAAG,CAAC;IACX;EACJ,CAAC,EAAE,CAAChB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,oBAAOF,OAAA;IAAKqB,GAAG,EAAEjB,MAAO;IAACkB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1E,CAAC;AAACzB,EAAA,CAnCIF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}